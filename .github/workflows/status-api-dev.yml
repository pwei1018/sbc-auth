name: Status API DEV CD

on:
  push:
    branches:
      - development
    paths:
      - "status-api/**"
  workflow_dispatch:
    inputs:
      TAG_NAME:
        description: "Environment (dev/test/prod)"
        required: true
        default: "dev"

env:
  IMAGE_NAME: status-api

jobs:
  status-api-dev:
    runs-on: ubuntu-latest
    # if: github.repository == 'bcgov/sbc-auth'
    steps:
      - uses: actions/checkout@v2
      - name: Install tools
        run: |
          ./scripts/install_tools.sh
          oc version
          op --version
      - name: Login Openshift
        working-directory: ./status-api
        run: |
          oc login ${{ secrets.OPENSHIFT_LOGIN_REGISTRY }} --token=${{ secrets.OPENSHIFT_SA_TOKEN }}
      - name: Set Deployment Environement Variables
        working-directory: .
        run: |
          vaults='[{ "vault": "shared", "application": ["jwt"]}, {"vault": "relationship","application": ["status-api", "sentry"]}]'
          ./scripts/1pass.sh ${{ secrets.op_parameters }} -m "secret" -e "${{ github.event.inputs.TAG_NAME }}" -v "${vaults}" -a "${IMAGE_NAME}-${{ github.event.inputs.TAG_NAME }}" -n ${{ secrets.OPENSHIFT_REPOSITORY_DEV}}
      - name: Rollout new deployment
        working-directory: ./status-api
        run: |
          oc rollout status dc/$IMAGE_NAME-${TAG_NAME} -n ${{ secrets.OPENSHIFT_REPOSITORY_DEV}} -w
      - name: Rocket.Chat Notification
        uses: RocketChat/Rocket.Chat.GitHub.Action.Notification@master
        if: failure()
        with:
          type: ${{ job.status }}
          job_name: "*Status API Build and Deploy to ${{ github.event.inputs.TAG_NAME }}*"
          channel: "#registries-bot"
          url: ${{ secrets.ROCKETCHAT_WEBHOOK }}
          commit: true
          token: ${{ secrets.GITHUB_TOKEN }}
